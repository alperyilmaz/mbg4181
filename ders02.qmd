---
title: "Tidyverse Dosya Okuma, Select/Filter"
subtitle: "MBG4181 Biyolojik Veri Analizi ve Görüntüleme - Ders2"
author: "Alper Yılmaz"
date: 2025-03-07
format:
  revealjs:
    chalkboard: true
    css: custom.css
    smaller: true
    scrollable: true
    controls: true
    touch: true
    history: false
    progress: true
    slide-number: c/t
typora-copy-images-to: images
webr:
  packages: ['dplyr','unvotes','lubridate','scales','ggplot2','gt','htmltools','stringr'] # Install R packages on document open
  autoload-packages: false       # Disable automatic loading of packages
  show-startup-message: true     # Disable displaying status of webR initialization
  #render-df: gt-interactive
filters:
  - webr
---

## Önce keki yiyelim

```{webr}
library(dplyr)
library(lubridate)
library(scales)
library(unvotes)
library(ggplot2)

unvotes <- un_votes |>
  inner_join(un_roll_calls, by = "rcid") |>
  inner_join(un_roll_call_issues, by = "rcid")
```

## Kullanılan veri

```{webr}
library(gt)
library(htmltools)

my_data <- unvotes |> head(100) |> gt()
html_print(my_data)
```
## 

```{webr}
#| label: plot-yearly-yes-issue
#| message: false
#| fig-width: 12
#| fig-height: 6

unvotes |>
  filter(country %in% c("United Kingdom", "United States", "Turkey")) |>
  mutate(year = year(date)) |>
  group_by(country, year, issue) |>
  summarize(percent_yes = mean(vote == "yes")) |>
  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE) +
  facet_wrap(~issue) +
  scale_y_continuous(labels = percent) +
  labs(
    title = "Percentage of 'Yes' votes in the UN General Assembly",
    subtitle = "1946 to 2019",
    y = "% Yes",
    x = "Year",
    color = "Country"
  )
```

##

*unvotes* veri setindeki ülke isimleri aşağıdaki gibidir. Bu ülkelerden birkaçını seçip, bir önceki slaytta ülke ismini değiştirip, grafiği tekrar oluşturunuz.

```{webr}
#| label: list-countries

unvotes |> select(country) |> arrange(country) |> distinct() |> print(n=200)
```

## Select

SQL dilinde de önemli yeri olan **SELECT** Tidyverse ile veri analizinde de önemli bir yere sahiptir. Sütun seçimi, yer değiştirme ve sisim değiştirme için kullanılır.

Veri olarak yine *unvotes* tablosunu kullanalım.

```{webr}
#| label: col-names

names(unvotes)
```

## Select

**select()** fonksiyonu:

- sütun numarası
- sütun adı
- her ikisi için de aralık (`2:5` veya `country:vote` gibi)
- eksi(-) işareti ile sütun almama
- yardımcı fonskiyonlar ile belirli örüntü (*starts_with*, *ends_with*)
- *everything()* kısayolu

ile sütun seçimi yapabilir.

Sütunları yazdığınız sıra, sütunları seçtiğiniz sıra olur otomatik olarak.

## Select

Bir önceki slaytta belirtilen özellikleri deneyiniz.

```{webr}
#| label: your-turn

select(unvotes, 1,5)
```

## Select yerine..

*select()* yardımıyla isim değişikliği `select(data, yeni=eski)` şeklinde yapılabilir ama bu aynı anda sütun yerini değiştirir. O yüzden eğer sadece isim değişikliği yapmak istiyorsanız **rename()** fonksiyonunu kullanabilirsiniz.

Ayrıca, amacınız sadece sütunların yerini değiştirmek ise, **relocate()** fonksiyonunu kullanabilirsiniz.

```{webr}
#| label: your-turn2

select(unvotes, short_name, country, everything()) |>
  rename(cc=country_code, imp=importantvote) |>
  relocate(cc, .after=country)
```

## Pipe | hakkında

Bir önceki slaytlarda kullandığımız pipe `|` karakteri, kendinden önce gelen tabloyu, kendinden sonra gelen komuta girdi olarak yönlendirmektedir. Bu özelliği sayesinde adımları tek tek değil, bir akış şeması gibi yazabiliriz.

```{webr}
#| label: pipe-hakkinda
istedigim_kolonlar <- select(unvotes, short_name, country, everything())
yeni_isimler <- rename(istedigim_kolonlar, cc=country_code, imp=importantvote)
son hal <- relocate(yeni_isimler, cc, .after=country)

#eşittir

unvotes |>
  select(unvotes, short_name, country, everything()) |>
  rename(cc=country_code, imp=importantvote) |>
  relocate(cc, .after=country) -> son_hal
```

## Filter

**filter()** fonksiyonu, SQL'deki **WHERE** komutu ile eştir. Belli bir koşulu sağlayan satırları tutar, sağlamayan satırları da eler. 
Kullanımı `filter(data, koşul)` şeklindedir.  Koşullar oluşturulurken aşağıdaki fonksiyonlar kullanılabilir:

- `==`, `>`, `>=` vs.
- `&`, `|`, `!`
- `is.na()`
- `between()`

## Filter


```{webr}
#| label: filter-giris

unvotes |>
  filter(session > 10)
```

Bu işlem aslında

```r
istenen_satirlar <- unvotes$session > 10
filter(unvotes, istenen_satirlar)
```

ile aynıdır. **filter()** fonksiyonuna *TRUE/FALSE* şeklinde bir vektör verilir, *TRUE* olan satırlar gösterilir. O yüzden, *TRUE/FALSE* üreten herhangi bir fonskiyonun çıktısı **filter()** fonskiyonu için kullanılabilir.

## Filter

`&`, `|`, `,` ile birden fazla koşul birleştirilebilir.

```{webr}
#| label: filter-and

unvotes |>
  filter(session > 10, country_code=="TR")
```

## NA

R dilinde `NA` yutan eleman gibidir.

```{webr}
#| label: na-yutan
test <- c(1,2,3,4,5,NA,8,9,10)
sum(test)
test > 5
test == NA
```
Bir değerin `NA` değerine eşit olup olmadığı `is.na()` fonksiyonu ile test edilir.

## Filter NA

`is.na()` NA olması durumunda `TRUE` sonuç verdiği için, NA içeren satırları elemek için `is.na()` çıktısının değilini (*not*) almak gerekir. R dilinde ünlem işareti ile değil (*not*) alınmış olur. 

> `na.omit()` fonksiyonu ile, herhangi bir sütununda NA içeren bütün satırlar elenir.

```{webr}
#| label: filter-na
unvotes |>
  filter(!is.na(country_code))
```

## Between

Normalde, bir aralık  için filtre yapılmak istendiğinde `session > 10, session < 20` şeklinde bir ifade kullanılabilir. Bunun yerine `between()` fonksiyonu kullanılabilir.

```{webr}
#| label: filter-between
unvotes |>
  filter(between(session, 10, 20))
```

## Filter 

Zaman kazandıracak bazı yöntemler:

- `filter(country=="Turkey", country=="Brazil", country=="Japan")` yerine *%in%* operatörü kullanmak daha pratik olacaktır `filter(country %in% c("Turkey","Brazil","Japan")`
- `stringr` paketi yardımıyla, belirli bir metni içeren satırları filtreleyebiliriz. `filter(str_detect(descr,"conflict")`

```{webr}
#| label: filter-tricks
unvotes |>
  filter(...)
```

:::footer
karmaşık örüntüler aramayı mümkün kılan [str_detect() örnekleri içeren sayfayı](https://stringr.tidyverse.org/reference/str_detect.html) ziyaret ediniz
:::
