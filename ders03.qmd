---
title: "Tidyverse Mutate ve Group_by/Summarize"
subtitle: "MBG4181 Biyolojik Veri Analizi ve Görüntüleme - Ders3"
author: "Alper Yılmaz"
date: 2025-03-14
format:
  revealjs:
    chalkboard: true
    css: custom.css
    smaller: true
    scrollable: true
    controls: true
    touch: true
    history: false
    progress: true
    slide-number: c/t
typora-copy-images-to: images
resources:
  - data
webr:
  packages: ['dplyr','unvotes','lubridate','scales','ggplot2','gt','htmltools','stringr'] # Install R packages on document open
  autoload-packages: false       # Disable automatic loading of packages
  show-startup-message: true     # Disable displaying status of webR initialization
  render-df: gt-interactive
  resources:
    - https://raw.githubusercontent.com/mwaskom/seaborn-data/master/flights.csv
filters:
  - webr
---

## Kaldığımız yerden devam edelim

```{webr}
library(dplyr)
library(lubridate)
library(scales)
library(unvotes)
library(ggplot2)

unvotes <- un_votes |>
  inner_join(un_roll_calls, by = "rcid") |>
  inner_join(un_roll_call_issues, by = "rcid")
```

## Mutate

**mutate()** fonksiyonu veri setlerine yeni sütunlar eklemek veya var olan sütunları değiştirmek için kullanılır. Orijinal veri setini değiştirmez, yeni bir veri seti olarak döndürür.

```{webr}
#| label: mutate-basic

unvotes |>
  mutate(year = year(date)) |>
  select(date, year, everything()) |>
  head()
```

## Mutate ile temel işlemler

Mutate ile yeni sütunlar eklerken mevcut sütunlar üzerinde işlemler yapabilirsiniz:

```{webr}
#| label: mutate-operations

unvotes |>
  mutate(
    year = year(date),
    month = month(date),
    day = day(date),
    vote_numeric = case_when(
      vote == "yes" ~ 1,
      vote == "no" ~ -1,
      vote == "abstain" ~ 0
    )
  ) |>
  select(date, year, month, day, vote, vote_numeric) |>
  head()
```

## Aynı anda birden fazla sütun

**mutate()** aynı anda birden fazla sütunu değiştirmenize veya eklemenize olanak tanır:

```{webr}
#| label: mutate-multiple

unvotes |>
  mutate(
    date_components = str_split(as.character(date), "-"),
    year = as.integer(map_chr(date_components, 1)),
    month = as.integer(map_chr(date_components, 2)),
    day = as.integer(map_chr(date_components, 3))
  ) |>
  select(date, year, month, day) |>
  head()
```

## Koşullu mutate

**case_when()** ile koşullu değerler atayabilirsiniz:

```{webr}
#| label: mutate-conditional

unvotes |>
  mutate(
    vote_category = case_when(
      vote == "yes" ~ "Destek",
      vote == "no" ~ "Karşı",
      vote == "abstain" ~ "Çekimser",
      TRUE ~ "Bilinmiyor"  # Default değer
    ),
    country_group = case_when(
      country %in% c("United States", "United Kingdom", "France", "Germany") ~ "Batı",
      country %in% c("China", "Russia", "India") ~ "BRICS",
      country %in% c("Turkey", "Iran", "Iraq", "Saudi Arabia") ~ "Orta Doğu",
      TRUE ~ "Diğer"
    )
  ) |>
  select(country, country_group, vote, vote_category) |>
  head(10)
```

## Mutate içinde ifcondition

**if_else()** fonksiyonu basit koşullu ifadeler için kullanılabilir:

```{webr}
#| label: mutate-ifelse

unvotes |>
  mutate(
    year = year(date),
    cold_war = if_else(year < 1991, "Soğuk Savaş Dönemi", "Soğuk Savaş Sonrası"),
    vote_support = if_else(vote == "yes", 1, 0)
  ) |>
  select(date, year, cold_war, vote, vote_support) |>
  head()
```

## Mutate ile matematiksel işlemler

Mutate ile matematiksel işlemler yapabilirsiniz:

```{webr}
#| label: mutate-math

# Örnek veri oluşturalım
set.seed(123)
data <- tibble(
  x = sample(1:100, 10),
  y = sample(1:100, 10)
)

data |>
  mutate(
    toplam = x + y,
    fark = x - y,
    carpim = x * y,
    oran = x / y,
    kare_x = x^2,
    kok_y = sqrt(y),
    log_x = log(x),
    z_skor_x = (x - mean(x)) / sd(x)
  ) |>
  head()
```

## Mutate ile string manipülasyonu

String işlemleri için **stringr** paketini kullanabilirsiniz:

```{webr}
#| label: mutate-string

unvotes |>
  mutate(
    country_upper = str_to_upper(country),
    country_first_char = str_sub(country, 1, 1),
    issue_clean = str_replace_all(issue, "_", " "),
    issue_title = str_to_title(issue_clean)
  ) |>
  select(country, country_upper, country_first_char, issue, issue_clean, issue_title) |>
  head()
```

## Group_by

**group_by()** fonksiyonu verileri gruplandırmak için kullanılır. Tek başına görsel bir değişiklik yapmaz, ancak sonraki işlemlerin gruplara göre uygulanmasını sağlar.

```{webr}
#| label: group-by-basic

grouped_votes <- unvotes |>
  mutate(year = year(date)) |>
  group_by(country)

# Gruplandırma bilgisini görelim
grouped_votes
```

## Group_by ve n()

Gruplardaki satır sayısını saymak için **n()** fonksiyonunu kullanabilirsiniz:

```{webr}
#| label: group-by-count

unvotes |>
  group_by(country) |>
  summarize(oy_sayisi = n()) |>
  arrange(desc(oy_sayisi)) |>
  head(10)
```

## Group_by ve Summarize

**summarize()** (veya **summarise()**) fonksiyonu gruplandırılmış verileri özetlemek için kullanılır:

```{webr}
#| label: group-by-summarize-basic

unvotes |>
  mutate(year = year(date)) |>
  group_by(country) |>
  summarize(
    ilk_oy = min(year),
    son_oy = max(year),
    toplam_oy = n(),
    evet_orani = mean(vote == "yes") * 100
  ) |>
  arrange(desc(evet_orani)) |>
  head(10)
```

## Çoklu Group_by

Birden fazla değişkene göre gruplandırma yapabilirsiniz:

```{webr}
#| label: group-by-multiple

unvotes |>
  mutate(year = year(date)) |>
  filter(country %in% c("Turkey", "United States", "Russia", "China")) |>
  group_by(country, year) |>
  summarize(
    oy_sayisi = n(),
    evet_orani = mean(vote == "yes") * 100,
    hayir_orani = mean(vote == "no") * 100,
    cekimser_orani = mean(vote == "abstain") * 100
  ) |>
  arrange(country, year) |>
  head(12)
```

## Gruplandırılmış verileri görselleştirme

Gruplandırılmış veriler üzerinde yapılan işlemler görselleştirme için çok uygundur:

```{webr}
#| label: plot-grouped-data
#| fig-width: 10
#| fig-height: 6

unvotes |>
  mutate(year = year(date)) |>
  filter(country %in% c("Turkey", "United States", "Russia", "China", "Brazil", "India")) |>
  group_by(country, year) |>
  summarize(evet_orani = mean(vote == "yes") * 100) |>
  ggplot(aes(x = year, y = evet_orani, color = country)) +
  geom_line(size = 1) +
  geom_point() +
  labs(
    title = "BM Genel Kurulu'nda 'Evet' oylarının yüzdesi",
    subtitle = "Seçilmiş ülkeler, 1946-2019",
    x = "Yıl",
    y = "Evet oyu oranı (%)",
    color = "Ülke"
  ) +
  theme_minimal() +
  scale_y_continuous(limits = c(0, 100))
```

## Summarize fonksiyonları

Özet istatistikler için yaygın olarak kullanılan fonksiyonlar:

- **mean()**: Ortalama
- **median()**: Medyan
- **min()**, **max()**: Minimum, maksimum değerler
- **sd()**, **var()**: Standart sapma, varyans
- **n()**: Satır sayısı
- **n_distinct()**: Benzersiz değer sayısı
- **first()**, **last()**: İlk ve son değerler
- **quantile()**: Belirli bir yüzdelik dilim

## Summarize örneği

```{webr}
#| label: summarize-functions

unvotes |>
  mutate(year = year(date)) |>
  filter(country == "Turkey") |>
  group_by(issue) |>
  summarize(
    ilk_oy_yili = min(year),
    son_oy_yili = max(year),
    oy_sayisi = n(),
    evet_orani = mean(vote == "yes") * 100,
    hayir_orani = mean(vote == "no") * 100,
    cekimser_orani = mean(vote == "abstain") * 100,
    benzersiz_yil = n_distinct(year)
  ) |>
  arrange(desc(oy_sayisi))
```

## Group_by, Summarize ve Filter birlikte

Bu fonksiyonları bir arada kullanabilirsiniz:

```{webr}
#| label: group-by-summarize-filter

unvotes |>
  mutate(year = year(date)) |>
  filter(between(year, 2000, 2019)) |>
  group_by(country) |>
  summarize(
    oy_sayisi = n(),
    evet_orani = mean(vote == "yes") * 100
  ) |>
  filter(oy_sayisi > 100) |>
  arrange(evet_orani) |>
  head(10)
```

## ungroup()

Bazen grup işlemlerinden sonra gruplama durumunu kaldırmak isteyebilirsiniz. Bunun için **ungroup()** kullanabilirsiniz:

```{webr}
#| label: ungroup

# Gruplandırılmış veri
grouped_data <- unvotes |>
  mutate(year = year(date)) |>
  group_by(country, year)

# Grup bilgisi
grouped_data

# Grubu kaldır
ungrouped_data <- grouped_data |> ungroup()
ungrouped_data
```

## Mutate vs Summarize

- **mutate()**: Her satır için yeni sütunlar oluşturur, satır sayısı değişmez
- **summarize()**: Grupları özetleyerek yeni bir tablo oluşturur, satır sayısı genellikle azalır

```{webr}
#| label: mutate-vs-summarize

# Orjinal veri
original <- unvotes |>
  mutate(year = year(date)) |>
  filter(country == "Turkey", year == 2015)
dim(original)

# Mutate ile
with_mutate <- original |>
  mutate(evet_mi = vote == "yes")
dim(with_mutate)

# Summarize ile
with_summarize <- original |>
  group_by(issue) |>
  summarize(evet_sayisi = sum(vote == "yes"))
dim(with_summarize)
```

## Gruplandırma ve mutate

**group_by()** ile **mutate()** birlikte kullanıldığında, her grup içinde hesaplama yapılır:

```{webr}
#| label: group-by-mutate

unvotes |>
  mutate(year = year(date)) |>
  filter(country %in% c("Turkey", "United States", "Russia"), year >= 2010) |>
  group_by(country, year) |>
  mutate(
    evet_oran = mean(vote == "yes"),
    z_score = (evet_oran - mean(evet_oran)) / sd(evet_oran)
  ) |>
  select(country, year, vote, evet_oran, z_score) |>
  head(15)
```

## Ülke bazında yıllık oy analizi örneği

```{webr}
#| label: comprehensive-example
#| fig-width: 10
#| fig-height: 7

# Verileri hazırlayalım
vote_trends <- unvotes |>
  mutate(year = year(date)) |>
  filter(year >= 1990, country %in% c("Turkey", "United States", "Russia", "China", "Germany", "France")) |>
  group_by(country, year, issue) |>
  summarize(
    oy_sayisi = n(),
    evet_orani = mean(vote == "yes") * 100,
    hayir_orani = mean(vote == "no") * 100,
    cekimser_orani = mean(vote == "abstain") * 100
  ) |>
  ungroup()

# Grafiği çizelim
ggplot(vote_trends, aes(x = year, y = evet_orani, color = country)) +
  geom_point(alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE) +
  facet_wrap(~issue) +
  labs(
    title = "BM Genel Kurulu'nda konu bazında 'Evet' oy oranları",
    subtitle = "1990-2019",
    x = "Yıl",
    y = "Evet oyu oranı (%)",
    color = "Ülke"
  ) +
  theme_minimal() +
  theme(legend.position = "bottom") +
  scale_y_continuous(limits = c(0, 100)) +
  scale_color_brewer(palette = "Set1")
```

## Alıştırma

*unvotes* veri setini kullanarak:

1. 2000 yılından sonra en çok oy kullanan 10 ülkeyi bulunuz.
2. Her konu için, Türkiye'nin yıllara göre evet oy oranını hesaplayıp görselleştiriniz.
3. Soğuk Savaş döneminde (1991 öncesi) ve sonrasında ABD ve Rusya'nın oy benzerliğini karşılaştırınız.

```{webr}
#| label: your-turn

# Çözümünüzü buraya yazabilirsiniz

```

## test

```{webr}
#| autorun: true
#| runbutton: false
plot(1:10, 1:10)
```
## test2

```{webr}
#| include: false
mtcars
```
## test3

```{webr}
list.files("data")
data <- read_csv("hg19genes.csv")
head(data)
```

## test4

```{webr}
#| exercise: ex_1
1 + 2 + 3 + ______
```
